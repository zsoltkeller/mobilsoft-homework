swagger: '2.0'
info:
  description: This is a sample server for CostRecords.
  version: 1.0.0
  title: CostRecord API
  contact:
    email: zsolit205@hotmail.com
host: costrecord.swagger.io
tags:
  - name: costrecord
    description: Everything about Cost Records
  - name: category
    description: Access to Cost Record categories
  - name: user
    description: Operations about user
definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    required:
      - name
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      password:
        type: string
    required:
      - name
      - password
    xml:
      name: User
  CostRecord:
    type: object
    required:
      - name
      - category
      - date
      - cost
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: cinema
      cost:
        type: number
        format: double
        example: '100'
      date:
        type: string
        format: date-time
      comment:
        type: string
    xml:
      name: CostRecord
schemes:
  - http
paths:
  /costrecord:
    post:
      tags:
        - costrecord
      summary: Add a new costrecord to the database
      operationId: addCostRecord
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: costredocrd
          description: CostRecord object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/CostRecord'
      responses:
        '201':
          description: CostRecord added
        '405':
          description: Invalid input
    get:
      tags:
        - costrecord
      summary: Gets all costrecord from the database
      description: ''
      operationId: getCostRecords
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CostRecord'
        '405':
          description: Invalid input
  '/costrecord/{costRecordId}':
    get:
      tags:
        - costrecord
      summary: Find costrecord by ID
      description: Returns a single CostRecord
      operationId: getCostRecordById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: costRecordId
          in: path
          description: ID of CostRecord to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CostRecord'
        '400':
          description: Invalid ID supplied
        '404':
          description: CostRecord not found
    put:
      tags:
        - costrecord
      summary: Update or add a new costrecord to the database
      description: ''
      operationId: updateCostRecord
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: CostRecord object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/CostRecord'
      responses:
        '201':
          description: CostRecord added / modified
        '405':
          description: Invalid input
    delete:
      tags:
        - costrecord
      summary: Deletes a CostRecord
      description: ''
      operationId: deleteCostRecord
      produces:
        - application/xml
        - application/json
      parameters:
        - name: costRecordId
          in: path
          description: CostRecord id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Costrecord successfully deleted from the db.
        '400':
          description: Invalid ID supplied
        '404':
          description: CostRecord not found
  /category:
    post:
      tags:
        - category
      summary: Add a new category to the database
      description: ''
      operationId: addCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '201':
          description: Category added
        '405':
          description: Invalid input
    get:
      tags:
        - category
      summary: Gets all category from the database
      description: ''
      operationId: getCategories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        '405':
          description: Invalid input
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: user
          in: body
          description: The user info as JSON.
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
