swagger: '2.0'
info:
  description: This is a sample server for CostRecords.
  version: 1.0.0
  title: CostRecord API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: zsolit205@hotmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: costrecord.swagger.io
basePath: /v2
tags:
  - name: costrecord
    description: Everything about Cost Records
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: category
    description: Access to Cost Record categories
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /costrecord:
    post:
      tags:
        - costrecord
      summary: Add a new costrecord to the database
      description: ''
      operationId: addCostRecord
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: CostRecord object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/CostRecord'
      responses:
        '405':
          description: Invalid input
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
    get:
      tags:
        - costrecord
      summary: Gets all costrecord from the database
      description: ''
      operationId: getCostRecords
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Gets all the costrecords
          required: true
          schema:
            $ref: '#/definitions/CostRecord'
      responses:
        '405':
          description: Invalid input
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
  '/costrecord/{costRecordId}':
    get:
      tags:
        - costrecord
      summary: Find costrecord by ID
      description: Returns a single CostRecord
      operationId: getCostRecordById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: costRecordId
          in: path
          description: ID of CostRecord to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CostRecord'
        '400':
          description: Invalid ID supplied
        '404':
          description: CostRecord not found
      security:
        - api_key: []
    put:
      tags:
        - costrecord
      summary: Add a new costrecord to the database
      description: ''
      operationId: updateCostRecord
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: CostRecord object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/CostRecord'
      responses:
        '405':
          description: Invalid input
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
    delete:
      tags:
        - costrecord
      summary: Deletes a CostRecord
      description: ''
      operationId: deleteCostRecord
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: costRecordId
          in: path
          description: CostRecord id to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: CostRecord not found
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
  /category:
    post:
      tags:
        - category
      summary: Add a new category to the database
      description: ''
      operationId: addCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be added to the database
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '405':
          description: Invalid input
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
    get:
      tags:
        - category
      summary: Gets all category from the database
      description: ''
      operationId: getCategories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Gets all the categories
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '405':
          description: Invalid input
      security:
        - costrecord_auth:
            - 'write:costrecord'
            - 'read:costrecord'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
securityDefinitions:
  costrecord_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:costrecord': modify costrecords
      'read:costrecord': read your costrecords
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  CostRecord:
    type: object
    required:
      - name
      - date
      - cost
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: cinema
      cost:
        type: number
        format: double
        example: '100'
      date:
        type: string
        format: date-time
      comment:
        type: string
    xml:
      name: CostRecord
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
